---
title: Subscription
index: 4
description: Subscriptions in Houdini
---

<script>
    import { HeaderWithMode } from '~/components'
	import SubscriptionClient from '~/sections/subscription-client.svx'
</script>

<HeaderWithMode title="Subscription" />

Listen for real-time updates from your server using GraphQL Subscriptions.

```svelte
<script>
	import { graphql, subscription } from '$houdini'

	// this information should usually come from a fragment
	export let itemID

	subscription(
		graphql`
			subscription ItemUpdate($id: ID!) {
				itemUpdate(id: $id) {
					item {
						id
						completed
						text
					}
				}
			}
		`,
		{ id: itemID }
	)
</script>
```

### Inputs

1. A string tagged with `graphql` containing a single document with one named subscription
2. An object containing any arguments for the subscription

### Return Values

`subscription` returns a store containing the latest version of the subscription value

Note: mutations usually do best when combined with at least one fragment grabbing
the information needed for the mutation (for an example of this pattern, see below.)

## List Operations

Subscription bodies can contain all of the list operations described in [this document](/api/graphql).

## Configuring the client

<SubscriptionClient />
