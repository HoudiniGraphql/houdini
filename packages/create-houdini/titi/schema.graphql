type Continent {
  code: ID!
  countries: [Country!]!
  name: String!
}

input ContinentFilterInput {
  code: StringQueryOperatorInput
}

type Country {
  awsRegion: String!
  capital: String
  code: ID!
  continent: Continent!
  currencies: [String!]!
  currency: String
  emoji: String!
  emojiU: String!
  languages: [Language!]!
  name(lang: String): String!
  native: String!
  phone: String!
  phones: [String!]!
  states: [State!]!
  subdivisions: [Subdivision!]!
}

input CountryFilterInput {
  code: StringQueryOperatorInput
  continent: StringQueryOperatorInput
  currency: StringQueryOperatorInput
}

type Language {
  code: ID!
  name: String!
  native: String!
  rtl: Boolean!
}

input LanguageFilterInput {
  code: StringQueryOperatorInput
}

type Query {
  continent(code: ID!): Continent
  continents(filter: ContinentFilterInput = {}): [Continent!]!
  countries(filter: CountryFilterInput = {}): [Country!]!
  country(code: ID!): Country
  language(code: ID!): Language
  languages(filter: LanguageFilterInput = {}): [Language!]!
}

type State {
  code: String
  country: Country!
  name: String!
}

input StringQueryOperatorInput {
  eq: String
  in: [String!]
  ne: String
  nin: [String!]
  regex: String
}

type Subdivision {
  code: ID!
  emoji: String
  name: String!
}
