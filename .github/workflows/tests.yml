name: CI Checks

# run this workflow on specific events in github
on:
    # pull requests to master
    pull_request:
        paths:
            - '**'

    # every commit on master
    push:
        branches:
            - main

jobs:
    format:
        name: Formatting
        runs-on: ubuntu-latest

        steps:
            - name: Checkout source
              uses: actions/checkout@master
              with:
                  ref: ${{ github.ref }}

            - name: Install Node.js
              uses: actions/setup-node@v3
              with:
                node-version: 16.17.0

            - uses: pnpm/action-setup@v2.0.1
              name: Install pnpm
              id: pnpm-install
              with:
                version: 7

            - name: Install dependencies
              run: pnpm install

            - name: Check prettier
              run: pnpm run format:check

            - name: Check lint
              run: pnpm run lint

    tests:
        name: Tests
        runs-on: ubuntu-latest

        steps:
            - name: Checkout source
              uses: actions/checkout@v3
              with:
                  ref: ${{ github.ref }}

            - name: Install Node.js
              uses: actions/setup-node@v3
              with:
                node-version: 16.17.0

            - uses: pnpm/action-setup@v2.0.1
              name: Install pnpm
              id: pnpm-install
              with:
                version: 7
                
            - name: Get pnpm store directory
              id: pnpm-cache
              run: |
                echo "::set-output name=pnpm_cache_dir::$(pnpm store path)"

            - uses: actions/cache@v3
              name: Setup pnpm cache
              with:
                path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
                key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
                restore-keys: |
                  ${{ runner.os }}-pnpm-store-

            - name: Install dependencies
              run: pnpm install

            - name: Build packages
              run: pnpm run compile

            - name: Tests
              run: pnpm run tests

    e2e_sveltekit:
        name: End-to-End Tests
        runs-on: ubuntu-latest

        steps:
            - name: Checkout source
              uses: actions/checkout@v3
              with:
                  ref: ${{ github.ref }}

            - name: Install Node.js
              uses: actions/setup-node@v3
              with:
                node-version: 16.17.0

            - uses: pnpm/action-setup@v2.0.1
              name: Install pnpm
              id: pnpm-install
              with:
                version: 7
                
            - name: Get pnpm store directory
              id: pnpm-cache
              run: |
                echo "::set-output name=pnpm_cache_dir::$(pnpm store path)"

            - uses: actions/cache@v3
              name: Setup pnpm cache
              with:
                path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
                key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
                restore-keys: |
                  ${{ runner.os }}-pnpm-store-

            - name: Install dependencies
              run: pnpm install
              
            - name: Cache playwright binaries
              uses: actions/cache@v2
              id: playwright-cache
              with:
                  path: |
                      ~/.cache/ms-playwright
                  key: cache-playwright-linux-1.25.0

            - name: Build packages
              run: pnpm run compile

            - name: Install Playwright
              if: steps.playwright-cache.outputs.cache-hit != 'true'
              run: npx playwright install --with-deps

            - name: End-to-End Tests sveltekit
              run: pnpm run --filter sveltekit build && pnpm --filter sveltekit tests
              env:
                  RECORD_REPLAY_TEST_RUN_ID: ${{ env.GITHUB_SHA }}

            - name: Upload videos
              uses: replayio/action-upload@v0.4.1
              if: ${{ always() }}
              with:
                  api-key: ${{ secrets.RECORD_REPLAY_API_KEY }}
                  filter: ${{ 'function($v) { $v.metadata.test.result = "failed" and $v.status = "onDisk" }' }}

    e2e_sveltekit_linter:
        name: End-to-End Linter
        runs-on: ubuntu-latest

        steps:
            - name: Checkout source
              uses: actions/checkout@v3
              with:
                  ref: ${{ github.ref }}

            - name: Install Node.js
              uses: actions/setup-node@v3
              with:
                node-version: 16.17.0

            - uses: pnpm/action-setup@v2.0.1
              name: Install pnpm
              id: pnpm-install
              with:
                version: 7
                
            - name: Get pnpm store directory
              id: pnpm-cache
              run: |
                echo "::set-output name=pnpm_cache_dir::$(pnpm store path)"

            - uses: actions/cache@v3
              name: Setup pnpm cache
              with:
                path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
                key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
                restore-keys: |
                  ${{ runner.os }}-pnpm-store-

            - name: Install dependencies
              run: pnpm install

            - name: Build Package
              run: pnpm run build

            - name: Build kit assets
              run: pnpm --filter sveltekit run build

            # needs to run after build & houdini generate
            - name: End-to-End lint
              run: pnpm --filter sveltekit run lint

            - name: End-to-End check
              run: pnpm --filter sveltekit run check
