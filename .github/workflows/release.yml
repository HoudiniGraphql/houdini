name: Publish Release
on:
    # When Release Pull Request is merged
    pull_request:
        branches:
            - main

env:
    CI: true
jobs:
    publish:
        name: Publish
        runs-on: ubuntu-18.04
        steps:
            - name: Checkout
              uses: actions/checkout@v2
              with:
                  fetch-depth: 0

            - name: Attach Head
              run: |
                  git checkout ${{ github.event.pull_request.base.ref }}

            - name: Setup Node 15
              uses: actions/setup-node@v1
              with:
                  node-version: 15
                  registry-url: 'https://npm.pkg.github.com'

            # run git actions as a bot
            - name: Git Identity
              run: |
                  git config --global user.name 'github-actions[bot]'
                  git config --global user.email 'github-actions[bot]@users.noreply.github.com'
                  git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/$GITHUB_REPOSITORY
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            - name: Install and Build
              run: |
                  yarn install
                  yarn build
                  git checkout yarn.lock

            # bump the package versions depending on the labels of the pull request
            - name: Bump version
              run: |
                  if [ ${{ contains(github.event.pull_request.labels.*.name, 'Major Version') }} = "true" ] ; then
                    yarn lerna version major --yes
                  elif [ ${{ contains(github.event.pull_request.labels.*.name, 'Minor Version') }} = "true" ] ; then
                    yarn lerna version minor --yes
                  elif [ ${{ contains(github.event.pull_request.labels.*.name, 'Major Version') }} = "true" ] ; then
                    yarn lerna version patch --yes
                  fi

            # define ${CURRENT_VERSION}
            - name: Set Current Version
              shell: bash -ex {0}
              run: |
                  CURRENT_VERSION=$(node -p 'require("./lerna.json").version')
                  echo "CURRENT_VERSION=${CURRENT_VERSION}" >> $GITHUB_ENV

            # create the release in github
            - name: Create Release
              id: create_release
              uses: actions/create-release@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  tag_name: v${{ env.CURRENT_VERSION }}
                  # Copy Pull Request's tile and body to Release Note
                  release_name: ${{ github.event.pull_request.title }}
                  body: |
                      ${{ github.event.pull_request.body }}
                  draft: false
                  prerelease: false

            # publish new package versions to npm
            - name: Publish
              run: |
                  yarn lerna publish from-package --yes
              env:
                  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            # commit and push any local changes we've made (ie, new package versions)
            - name: Push Git Artifacts
              run: |
                  git commit -am "ðŸ“¦ ${CURRENT_VERSION}"
                  git push
