input AddItemInput {
  text: String!
}

type AddItemOutput {
  error: Error
  item: TodoItem
}

"""Date custom scalar type"""
scalar DateTime

type DeleteIemOutput {
  error: Error
  itemID: ID
}

type Error {
  code: String!
  message: String!
}

type ItemUpdate {
  item: TodoItem!
}

type Mutation {
  addItem(input: AddItemInput!): AddItemOutput!
  checkItem(item: ID!): UpdateItemOutput!
  deleteItem(item: ID!): DeleteIemOutput!
  uncheckItem(item: ID!): UpdateItemOutput!
}

type PageInfo {
  endCursor: String
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
}

type Query {
  items(after: String, completed: Boolean, first: Int): TodoItemConnection!
}

type Subscription {
  itemUpdate(id: ID!): ItemUpdate!
  newItem: ItemUpdate!
}

type TodoItem {
  completed: Boolean!
  createdAt: DateTime!
  id: ID!
  text: String!
}

type TodoItemConnection {
  edges: [TodoItemEdge!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type TodoItemEdge {
  cursor: String
  node: TodoItem
}

type UpdateItemOutput {
  error: Error
  item: TodoItem
}
